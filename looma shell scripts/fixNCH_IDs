// ONE TIME program to trim leading and trailing blanks from activities' nch_id's and nch_id's
//          also removes null, undefined or "" nch_ids
//          also removes nch_ids that dont match the CH_IDregex
////
//  run in MONGO SHELL with: load('fixNCH_IDs')
//
var cursor, count, fixcount, doc, output;


// need to remove "", null, undefined, and illegal nch_id's (e.g. text like "People")
var CH_IDregex = /([1-9]|10|11|12)(EN|Ena|Sa|S|SF|Ma|M|SSa|SS|N|H|V|CS)[0-9]{2}(\.[0-9]{2})?/;

cursor = db.activities.find({});
count = 0; fixcount = 0;

while (cursor.hasNext()) {
    doc = cursor.next();
    count++;

    if (doc['nch_id'])
    {
        fixcount++;
        var nch_set = new Set();
        for ( var i=0; i<doc['nch_id'].length; i++)
        {   nch = doc['nch_id'][i];
            if (nch) {
               var trim = nch.trim();
               if (trim.match(CH_IDregex)) nch_set.add(trim);
               else print ('excluding ' + trim);
            };
        };

        if (nch_set.length !== 0)  doc['nch_id'] = [...nch_set]; else delete doc['nch_id'];

        output  = '...' + doc['dn'] + '...nch_ids ...[';
        for ( var i=0;i<doc['nch_id'].length;i++) { output += doc['nch_id'][i] + ',';}
        output +=']';
        print (output);

        if (param === 'run') db.activities.update({_id:doc._id}, doc);

    };
};

print('_______________');
print(' + + + checked ' + count + ' activities');
print(' + + + found ' + fixcount + ' activities with nch_ids');
print('_______________');
